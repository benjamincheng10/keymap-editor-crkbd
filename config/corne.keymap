/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <10 11>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
         &kp TAB  &kp Q  &kp W  &kp F  &kp P      &kp B      &kp J  &kp L      &kp U       &kp Y  &kp APOSTROPHE       &kp BSPC
  &kp LEFT_SHIFT  &kp A  &kp R  &kp S  &kp T      &kp G      &kp M  &kp N      &kp E       &kp I           &kp O  &kp BACKSLASH
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C  &kp D      &kp V      &kp K  &kp H  &kp COMMA  &kp PERIOD       &kp SLASH       &kp SEMI
                                &mo 2  &mo 1  &kp SPACE    &kp RET  &mo 3      &mo 4
      >;
    };

    Num {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp N7     &kp N8  &kp N9  &kp N0  &kp KP_ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp N4     &kp N5  &kp N6  &trans  &kp KP_SUBTRACT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1     &kp N2  &kp N3  &trans      &kp KP_PLUS
                        &trans  &trans  &trans    &trans     &kp KP_N0  &kp KP_N0
      >;

      label = "Num";
    };

    Fun {
      bindings = <
&kp ESC  &trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12  &kp C_VOL_UP
 &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11  &kp C_VOL_DN
 &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10    &kp C_MUTE
                         &trans  &trans  &trans    &trans  &trans  &trans
      >;

      label = "Fun";
    };

    Nav {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp HOME    &kp UP_ARROW          &kp END    &kp PAGE_UP  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans           &trans         &trans  &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
      >;

      label = "Nav";
    };

    Sym {
      bindings = <
&kp TILDE  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans    &trans  &trans  &trans  &trans  &kp MINUS  &kp EQUAL
   &trans  &trans  &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp SEMI    &trans  &trans  &trans  &trans     &trans     &trans
   &trans  &trans  &trans         &kp LESS_THAN       &kp GREATER_THAN    &trans    &trans  &trans  &trans  &trans     &trans     &trans
                                         &trans                 &trans    &trans    &trans  &trans  &trans
      >;

      label = "Sym";
    };
  };
};
